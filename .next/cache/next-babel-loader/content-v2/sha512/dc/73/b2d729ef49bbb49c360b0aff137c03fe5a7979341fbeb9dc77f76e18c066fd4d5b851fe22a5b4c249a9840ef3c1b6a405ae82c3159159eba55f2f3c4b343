{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\test\\\\REACT JS\\\\next-project\\\\pages\\\\index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient, ServerApiVersion } from \"mongodb\";\nconst DUMMY_DATA = [{\n  id: \"m1\",\n  title: \"first meetup\",\n  image: \"https://images.unsplash.com/photo-1471958680802-1345a694ba6d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8d2F5fGVufDB8fDB8fA%3D%3D&w=1000&q=80\",\n  address: \"Something important\",\n  description: \"blablablou\"\n}, {\n  id: \"m2\",\n  title: \"seconde meetup\",\n  image: \"https://images.unsplash.com/photo-1471958680802-1345a694ba6d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8d2F5fGVufDB8fDB8fA%3D%3D&w=1000&q=80\",\n  address: \"Something important\",\n  description: \"blablablou\"\n}];\n\nconst Homepage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticProps() {\n  // fetch data from API\n  const client = new MongoClient(uri, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    serverApi: ServerApiVersion.v1\n  });\n  client.connect(async err => {\n    const meetupCollection = client.db(\"meetups-app\").collection(\"meetups\");\n    const meetups = await meetupCollection.find().toArray();\n    const test = await meetupCollection.find();\n    console.log(err, test);\n    client.close();\n    return {\n      props: {\n        meetups: meetups\n      },\n      // incremental static generation\n      revalidate: 1\n    };\n  });\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   return {\n//     props: {\n//       meetups: DUMMY_DATA,\n//     },\n//   };\n// }\n\nexport default Homepage;","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/test/REACT JS/next-project/pages/index.js"],"names":["MeetupList","MongoClient","ServerApiVersion","DUMMY_DATA","id","title","image","address","description","Homepage","props","meetups","getStaticProps","client","uri","useNewUrlParser","useUnifiedTopology","serverApi","v1","connect","err","meetupCollection","db","collection","find","toArray","test","console","log","close","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,SAA9C;AAEA,MAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,KAAK,EACH,mJAJJ;AAKEC,EAAAA,OAAO,EAAE,qBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADiB,EASjB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,mJAJJ;AAKEC,EAAAA,OAAO,EAAE,qBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CATiB,CAAnB;;AAmBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,IAAIZ,WAAJ,CAAgBa,GAAhB,EAAqB;AAClCC,IAAAA,eAAe,EAAE,IADiB;AAElCC,IAAAA,kBAAkB,EAAE,IAFc;AAGlCC,IAAAA,SAAS,EAAEf,gBAAgB,CAACgB;AAHM,GAArB,CAAf;AAMAL,EAAAA,MAAM,CAACM,OAAP,CAAe,MAAOC,GAAP,IAAe;AAC5B,UAAMC,gBAAgB,GAAGR,MAAM,CAACS,EAAP,CAAU,aAAV,EAAyBC,UAAzB,CAAoC,SAApC,CAAzB;AACA,UAAMZ,OAAO,GAAG,MAAMU,gBAAgB,CAACG,IAAjB,GAAwBC,OAAxB,EAAtB;AACA,UAAMC,IAAI,GAAG,MAAML,gBAAgB,CAACG,IAAjB,EAAnB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ,EAAiBM,IAAjB;AACAb,IAAAA,MAAM,CAACgB,KAAP;AACA,WAAO;AACLnB,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAEA;AADJ,OADF;AAIL;AACAmB,MAAAA,UAAU,EAAE;AALP,KAAP;AAOD,GAbD;AAcD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAerB,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\r\nimport { MongoClient, ServerApiVersion } from \"mongodb\";\r\n\r\nconst DUMMY_DATA = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"first meetup\",\r\n    image:\r\n      \"https://images.unsplash.com/photo-1471958680802-1345a694ba6d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8d2F5fGVufDB8fDB8fA%3D%3D&w=1000&q=80\",\r\n    address: \"Something important\",\r\n    description: \"blablablou\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"seconde meetup\",\r\n    image:\r\n      \"https://images.unsplash.com/photo-1471958680802-1345a694ba6d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8d2F5fGVufDB8fDB8fA%3D%3D&w=1000&q=80\",\r\n    address: \"Something important\",\r\n    description: \"blablablou\",\r\n  },\r\n];\r\n\r\nconst Homepage = (props) => {\r\n  return <MeetupList meetups={props.meetups} />;\r\n};\r\n\r\nexport async function getStaticProps() {\r\n  // fetch data from API\r\n  const client = new MongoClient(uri, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n    serverApi: ServerApiVersion.v1,\r\n  });\r\n\r\n  client.connect(async (err) => {\r\n    const meetupCollection = client.db(\"meetups-app\").collection(\"meetups\");\r\n    const meetups = await meetupCollection.find().toArray();\r\n    const test = await meetupCollection.find();\r\n    console.log(err, test);\r\n    client.close();\r\n    return {\r\n      props: {\r\n        meetups: meetups,\r\n      },\r\n      // incremental static generation\r\n      revalidate: 1,\r\n    };\r\n  });\r\n}\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_DATA,\r\n//     },\r\n//   };\r\n// }\r\n\r\nexport default Homepage;\r\n"]},"metadata":{},"sourceType":"module"}