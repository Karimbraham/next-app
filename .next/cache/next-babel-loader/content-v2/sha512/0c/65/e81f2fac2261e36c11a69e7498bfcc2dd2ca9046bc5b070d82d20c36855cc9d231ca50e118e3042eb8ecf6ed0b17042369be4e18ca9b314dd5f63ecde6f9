{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\test\\\\REACT JS\\\\next-project\\\\pages\\\\[meetupId]\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Fragment } from \"react\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient, ServerApiVersion } from \"mongodb\";\n\nconst MeetupDetailsPage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, _objectSpread({}, props.meetup), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  // fetch data from mongoDB atlas (cloud)\n  const uri = \"mongodb+srv://Admin:Azertier1@devcluster.lwvq1xo.mongodb.net/?retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(uri, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    serverApi: ServerApiVersion.v1\n  });\n  const meetupCollection = client.db(\"meetups-app\").collection(\"meetups\");\n  const meetupsIds = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetupsIds.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data from API\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetup: {\n        image: \"https://images.unsplash.com/photo-1471958680802-1345a694ba6d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8d2F5fGVufDB8fDB8fA%3D%3D&w=1000&q=80\",\n        id: meetupId,\n        title: \"first meetup\",\n        address: \"Some Street 5, Some City\",\n        description: \"The meetup\"\n      }\n    },\n    // incremental static generation\n    revalidate: 1\n  };\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/test/REACT JS/next-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetails","MongoClient","ServerApiVersion","MeetupDetailsPage","props","meetup","getStaticPaths","uri","client","connect","useNewUrlParser","useUnifiedTopology","serverApi","v1","meetupCollection","db","collection","meetupsIds","find","_id","toArray","close","fallback","paths","map","params","meetupId","toString","getStaticProps","context","image","id","title","address","description","revalidate"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,SAA9C;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,sBAAO,QAAC,aAAD,oBAAmBA,KAAK,CAACC,MAAzB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,GAAG,GACP,2FADF;AAGA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoBF,GAApB,EAAyB;AAC5CG,IAAAA,eAAe,EAAE,IAD2B;AAE5CC,IAAAA,kBAAkB,EAAE,IAFwB;AAG5CC,IAAAA,SAAS,EAAEV,gBAAgB,CAACW;AAHgB,GAAzB,CAArB;AAMA,QAAMC,gBAAgB,GAAGN,MAAM,CAACO,EAAP,CAAU,aAAV,EAAyBC,UAAzB,CAAoC,SAApC,CAAzB;AAEA,QAAMC,UAAU,GAAG,MAAMH,gBAAgB,CAACI,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAzB;AAEAZ,EAAAA,MAAM,CAACa,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,UAAU,CAACO,GAAX,CAAgBnB,MAAD,KAAa;AACjCoB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAErB,MAAM,CAACc,GAAP,CAAWQ,QAAX;AAAZ;AADyB,KAAb,CAAf;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,SAAO;AACLtB,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AACNyB,QAAAA,KAAK,EACH,mJAFI;AAGNC,QAAAA,EAAE,EAAEL,QAHE;AAINM,QAAAA,KAAK,EAAE,cAJD;AAKNC,QAAAA,OAAO,EAAE,0BALH;AAMNC,QAAAA,WAAW,EAAE;AANP;AADH,KADF;AAWL;AACAC,IAAAA,UAAU,EAAE;AAZP,GAAP;AAcD;AAED,eAAehC,iBAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport { MongoClient, ServerApiVersion } from \"mongodb\";\r\n\r\nconst MeetupDetailsPage = (props) => {\r\n  return <MeetupDetails {...props.meetup} />;\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  // fetch data from mongoDB atlas (cloud)\r\n  const uri =\r\n    \"mongodb+srv://Admin:Azertier1@devcluster.lwvq1xo.mongodb.net/?retryWrites=true&w=majority\";\r\n\r\n  const client = await MongoClient.connect(uri, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n    serverApi: ServerApiVersion.v1,\r\n  });\r\n\r\n  const meetupCollection = client.db(\"meetups-app\").collection(\"meetups\");\r\n\r\n  const meetupsIds = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetupsIds.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data from API\r\n  const meetupId = context.params.meetupId;\r\n  return {\r\n    props: {\r\n      meetup: {\r\n        image:\r\n          \"https://images.unsplash.com/photo-1471958680802-1345a694ba6d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8d2F5fGVufDB8fDB8fA%3D%3D&w=1000&q=80\",\r\n        id: meetupId,\r\n        title: \"first meetup\",\r\n        address: \"Some Street 5, Some City\",\r\n        description: \"The meetup\",\r\n      },\r\n    },\r\n    // incremental static generation\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default MeetupDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}