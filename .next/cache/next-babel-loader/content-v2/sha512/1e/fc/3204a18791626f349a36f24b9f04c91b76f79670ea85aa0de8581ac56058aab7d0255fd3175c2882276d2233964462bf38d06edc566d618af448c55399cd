{"ast":null,"code":"import _defineProperty from \"C:/Users/LENOVO/Desktop/test/REACT JS/next-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\test\\\\REACT JS\\\\next-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Fragment } from \"react\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport Head from \"next/head\";\n\nvar MeetupDetailsPage = function MeetupDetailsPage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"props.meetup.id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetup.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetails, _objectSpread({}, props.meetup), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetailsPage;\nexport var __N_SSG = true;\nexport default MeetupDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailsPage\");","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/test/REACT JS/next-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetails","Head","MeetupDetailsPage","props","meetup","description"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAKA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACnC,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEA,KAAK,CAACC,MAAN,CAAaC;AAA/C;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,aAAD,oBAAmBF,KAAK,CAACC,MAAzB;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAVD;;KAAMF,iB;;AAoEN,eAAeA,iBAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport { MongoClient, ServerApiVersion, ObjectId } from \"mongodb\";\r\nimport Head from \"next/head\";\r\n\r\nconst uri =\r\n  \"mongodb+srv://Admin:Azertier1@devcluster.lwvq1xo.mongodb.net/?retryWrites=true&w=majority\";\r\n\r\nconst MeetupDetailsPage = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>props.meetup.id</title>\r\n        <meta name=\"description\" content={props.meetup.description} />\r\n      </Head>\r\n      <MeetupDetails {...props.meetup} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  // fetch data from mongoDB atlas (cloud)\r\n\r\n  const client = await MongoClient.connect(uri, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n    serverApi: ServerApiVersion.v1,\r\n  });\r\n\r\n  const meetupCollection = client.db(\"meetups-app\").collection(\"meetups\");\r\n\r\n  const meetupsIds = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetupsIds.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  // fetch data from mongoDB atlas (cloud)\r\n  const client = await MongoClient.connect(uri, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n    serverApi: ServerApiVersion.v1,\r\n  });\r\n\r\n  const meetupCollection = client.db(\"meetups-app\").collection(\"meetups\");\r\n\r\n  const selectedMeetup = await meetupCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetup: {\r\n        id: selectedMeetup._id.toString(),\r\n        image: selectedMeetup.image,\r\n        address: selectedMeetup.address,\r\n        description: selectedMeetup.description,\r\n        title: selectedMeetup.title,\r\n      },\r\n    },\r\n    // incremental static generation\r\n    // revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default MeetupDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}